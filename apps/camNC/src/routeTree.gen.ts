/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SetupIndexImport } from './routes/setup/index'
import { Route as VisualizeVisualizeCommandsImport } from './routes/visualize/VisualizeCommands'
import { Route as Visualize2DViewImport } from './routes/visualize/2DView'
import { Route as SetupUrlEntryImport } from './routes/setup/url-entry'
import { Route as SetupSetupImport } from './routes/setup/setup'
import { Route as SetupPointSelectionImport } from './routes/setup/point-selection'
import { Route as SetupNewCamMatrixImport } from './routes/setup/new-cam-matrix'
import { Route as SetupMarkerPositionsImport } from './routes/setup/marker-positions'
import { Route as SetupMachineBoundsImport } from './routes/setup/machine-bounds'
import { Route as SetupFluidncImport } from './routes/setup/fluidnc'
import { Route as SetupEditSettingsImport } from './routes/setup/edit-settings'
import { Route as SetupCameraCalibrationImport } from './routes/setup/camera-calibration'
import { Route as DebugUnprojectImport } from './routes/debug/unproject'
import { Route as DebugUndistort2Import } from './routes/debug/undistort2'
import { Route as DebugRemapWebgpuImport } from './routes/debug/remap-webgpu'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SetupIndexRoute = SetupIndexImport.update({
  id: '/setup/',
  path: '/setup/',
  getParentRoute: () => rootRoute,
} as any)

const VisualizeVisualizeCommandsRoute = VisualizeVisualizeCommandsImport.update(
  {
    id: '/visualize/VisualizeCommands',
    path: '/visualize/VisualizeCommands',
    getParentRoute: () => rootRoute,
  } as any,
)

const Visualize2DViewRoute = Visualize2DViewImport.update({
  id: '/visualize/2DView',
  path: '/visualize/2DView',
  getParentRoute: () => rootRoute,
} as any)

const SetupUrlEntryRoute = SetupUrlEntryImport.update({
  id: '/setup/url-entry',
  path: '/setup/url-entry',
  getParentRoute: () => rootRoute,
} as any)

const SetupSetupRoute = SetupSetupImport.update({
  id: '/setup/setup',
  path: '/setup/setup',
  getParentRoute: () => rootRoute,
} as any)

const SetupPointSelectionRoute = SetupPointSelectionImport.update({
  id: '/setup/point-selection',
  path: '/setup/point-selection',
  getParentRoute: () => rootRoute,
} as any)

const SetupNewCamMatrixRoute = SetupNewCamMatrixImport.update({
  id: '/setup/new-cam-matrix',
  path: '/setup/new-cam-matrix',
  getParentRoute: () => rootRoute,
} as any)

const SetupMarkerPositionsRoute = SetupMarkerPositionsImport.update({
  id: '/setup/marker-positions',
  path: '/setup/marker-positions',
  getParentRoute: () => rootRoute,
} as any)

const SetupMachineBoundsRoute = SetupMachineBoundsImport.update({
  id: '/setup/machine-bounds',
  path: '/setup/machine-bounds',
  getParentRoute: () => rootRoute,
} as any)

const SetupFluidncRoute = SetupFluidncImport.update({
  id: '/setup/fluidnc',
  path: '/setup/fluidnc',
  getParentRoute: () => rootRoute,
} as any)

const SetupEditSettingsRoute = SetupEditSettingsImport.update({
  id: '/setup/edit-settings',
  path: '/setup/edit-settings',
  getParentRoute: () => rootRoute,
} as any)

const SetupCameraCalibrationRoute = SetupCameraCalibrationImport.update({
  id: '/setup/camera-calibration',
  path: '/setup/camera-calibration',
  getParentRoute: () => rootRoute,
} as any)

const DebugUnprojectRoute = DebugUnprojectImport.update({
  id: '/debug/unproject',
  path: '/debug/unproject',
  getParentRoute: () => rootRoute,
} as any)

const DebugUndistort2Route = DebugUndistort2Import.update({
  id: '/debug/undistort2',
  path: '/debug/undistort2',
  getParentRoute: () => rootRoute,
} as any)

const DebugRemapWebgpuRoute = DebugRemapWebgpuImport.update({
  id: '/debug/remap-webgpu',
  path: '/debug/remap-webgpu',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/debug/remap-webgpu': {
      id: '/debug/remap-webgpu'
      path: '/debug/remap-webgpu'
      fullPath: '/debug/remap-webgpu'
      preLoaderRoute: typeof DebugRemapWebgpuImport
      parentRoute: typeof rootRoute
    }
    '/debug/undistort2': {
      id: '/debug/undistort2'
      path: '/debug/undistort2'
      fullPath: '/debug/undistort2'
      preLoaderRoute: typeof DebugUndistort2Import
      parentRoute: typeof rootRoute
    }
    '/debug/unproject': {
      id: '/debug/unproject'
      path: '/debug/unproject'
      fullPath: '/debug/unproject'
      preLoaderRoute: typeof DebugUnprojectImport
      parentRoute: typeof rootRoute
    }
    '/setup/camera-calibration': {
      id: '/setup/camera-calibration'
      path: '/setup/camera-calibration'
      fullPath: '/setup/camera-calibration'
      preLoaderRoute: typeof SetupCameraCalibrationImport
      parentRoute: typeof rootRoute
    }
    '/setup/edit-settings': {
      id: '/setup/edit-settings'
      path: '/setup/edit-settings'
      fullPath: '/setup/edit-settings'
      preLoaderRoute: typeof SetupEditSettingsImport
      parentRoute: typeof rootRoute
    }
    '/setup/fluidnc': {
      id: '/setup/fluidnc'
      path: '/setup/fluidnc'
      fullPath: '/setup/fluidnc'
      preLoaderRoute: typeof SetupFluidncImport
      parentRoute: typeof rootRoute
    }
    '/setup/machine-bounds': {
      id: '/setup/machine-bounds'
      path: '/setup/machine-bounds'
      fullPath: '/setup/machine-bounds'
      preLoaderRoute: typeof SetupMachineBoundsImport
      parentRoute: typeof rootRoute
    }
    '/setup/marker-positions': {
      id: '/setup/marker-positions'
      path: '/setup/marker-positions'
      fullPath: '/setup/marker-positions'
      preLoaderRoute: typeof SetupMarkerPositionsImport
      parentRoute: typeof rootRoute
    }
    '/setup/new-cam-matrix': {
      id: '/setup/new-cam-matrix'
      path: '/setup/new-cam-matrix'
      fullPath: '/setup/new-cam-matrix'
      preLoaderRoute: typeof SetupNewCamMatrixImport
      parentRoute: typeof rootRoute
    }
    '/setup/point-selection': {
      id: '/setup/point-selection'
      path: '/setup/point-selection'
      fullPath: '/setup/point-selection'
      preLoaderRoute: typeof SetupPointSelectionImport
      parentRoute: typeof rootRoute
    }
    '/setup/setup': {
      id: '/setup/setup'
      path: '/setup/setup'
      fullPath: '/setup/setup'
      preLoaderRoute: typeof SetupSetupImport
      parentRoute: typeof rootRoute
    }
    '/setup/url-entry': {
      id: '/setup/url-entry'
      path: '/setup/url-entry'
      fullPath: '/setup/url-entry'
      preLoaderRoute: typeof SetupUrlEntryImport
      parentRoute: typeof rootRoute
    }
    '/visualize/2DView': {
      id: '/visualize/2DView'
      path: '/visualize/2DView'
      fullPath: '/visualize/2DView'
      preLoaderRoute: typeof Visualize2DViewImport
      parentRoute: typeof rootRoute
    }
    '/visualize/VisualizeCommands': {
      id: '/visualize/VisualizeCommands'
      path: '/visualize/VisualizeCommands'
      fullPath: '/visualize/VisualizeCommands'
      preLoaderRoute: typeof VisualizeVisualizeCommandsImport
      parentRoute: typeof rootRoute
    }
    '/setup/': {
      id: '/setup/'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/debug/remap-webgpu': typeof DebugRemapWebgpuRoute
  '/debug/undistort2': typeof DebugUndistort2Route
  '/debug/unproject': typeof DebugUnprojectRoute
  '/setup/camera-calibration': typeof SetupCameraCalibrationRoute
  '/setup/edit-settings': typeof SetupEditSettingsRoute
  '/setup/fluidnc': typeof SetupFluidncRoute
  '/setup/machine-bounds': typeof SetupMachineBoundsRoute
  '/setup/marker-positions': typeof SetupMarkerPositionsRoute
  '/setup/new-cam-matrix': typeof SetupNewCamMatrixRoute
  '/setup/point-selection': typeof SetupPointSelectionRoute
  '/setup/setup': typeof SetupSetupRoute
  '/setup/url-entry': typeof SetupUrlEntryRoute
  '/visualize/2DView': typeof Visualize2DViewRoute
  '/visualize/VisualizeCommands': typeof VisualizeVisualizeCommandsRoute
  '/setup': typeof SetupIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/debug/remap-webgpu': typeof DebugRemapWebgpuRoute
  '/debug/undistort2': typeof DebugUndistort2Route
  '/debug/unproject': typeof DebugUnprojectRoute
  '/setup/camera-calibration': typeof SetupCameraCalibrationRoute
  '/setup/edit-settings': typeof SetupEditSettingsRoute
  '/setup/fluidnc': typeof SetupFluidncRoute
  '/setup/machine-bounds': typeof SetupMachineBoundsRoute
  '/setup/marker-positions': typeof SetupMarkerPositionsRoute
  '/setup/new-cam-matrix': typeof SetupNewCamMatrixRoute
  '/setup/point-selection': typeof SetupPointSelectionRoute
  '/setup/setup': typeof SetupSetupRoute
  '/setup/url-entry': typeof SetupUrlEntryRoute
  '/visualize/2DView': typeof Visualize2DViewRoute
  '/visualize/VisualizeCommands': typeof VisualizeVisualizeCommandsRoute
  '/setup': typeof SetupIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/debug/remap-webgpu': typeof DebugRemapWebgpuRoute
  '/debug/undistort2': typeof DebugUndistort2Route
  '/debug/unproject': typeof DebugUnprojectRoute
  '/setup/camera-calibration': typeof SetupCameraCalibrationRoute
  '/setup/edit-settings': typeof SetupEditSettingsRoute
  '/setup/fluidnc': typeof SetupFluidncRoute
  '/setup/machine-bounds': typeof SetupMachineBoundsRoute
  '/setup/marker-positions': typeof SetupMarkerPositionsRoute
  '/setup/new-cam-matrix': typeof SetupNewCamMatrixRoute
  '/setup/point-selection': typeof SetupPointSelectionRoute
  '/setup/setup': typeof SetupSetupRoute
  '/setup/url-entry': typeof SetupUrlEntryRoute
  '/visualize/2DView': typeof Visualize2DViewRoute
  '/visualize/VisualizeCommands': typeof VisualizeVisualizeCommandsRoute
  '/setup/': typeof SetupIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/debug/remap-webgpu'
    | '/debug/undistort2'
    | '/debug/unproject'
    | '/setup/camera-calibration'
    | '/setup/edit-settings'
    | '/setup/fluidnc'
    | '/setup/machine-bounds'
    | '/setup/marker-positions'
    | '/setup/new-cam-matrix'
    | '/setup/point-selection'
    | '/setup/setup'
    | '/setup/url-entry'
    | '/visualize/2DView'
    | '/visualize/VisualizeCommands'
    | '/setup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/debug/remap-webgpu'
    | '/debug/undistort2'
    | '/debug/unproject'
    | '/setup/camera-calibration'
    | '/setup/edit-settings'
    | '/setup/fluidnc'
    | '/setup/machine-bounds'
    | '/setup/marker-positions'
    | '/setup/new-cam-matrix'
    | '/setup/point-selection'
    | '/setup/setup'
    | '/setup/url-entry'
    | '/visualize/2DView'
    | '/visualize/VisualizeCommands'
    | '/setup'
  id:
    | '__root__'
    | '/'
    | '/debug/remap-webgpu'
    | '/debug/undistort2'
    | '/debug/unproject'
    | '/setup/camera-calibration'
    | '/setup/edit-settings'
    | '/setup/fluidnc'
    | '/setup/machine-bounds'
    | '/setup/marker-positions'
    | '/setup/new-cam-matrix'
    | '/setup/point-selection'
    | '/setup/setup'
    | '/setup/url-entry'
    | '/visualize/2DView'
    | '/visualize/VisualizeCommands'
    | '/setup/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DebugRemapWebgpuRoute: typeof DebugRemapWebgpuRoute
  DebugUndistort2Route: typeof DebugUndistort2Route
  DebugUnprojectRoute: typeof DebugUnprojectRoute
  SetupCameraCalibrationRoute: typeof SetupCameraCalibrationRoute
  SetupEditSettingsRoute: typeof SetupEditSettingsRoute
  SetupFluidncRoute: typeof SetupFluidncRoute
  SetupMachineBoundsRoute: typeof SetupMachineBoundsRoute
  SetupMarkerPositionsRoute: typeof SetupMarkerPositionsRoute
  SetupNewCamMatrixRoute: typeof SetupNewCamMatrixRoute
  SetupPointSelectionRoute: typeof SetupPointSelectionRoute
  SetupSetupRoute: typeof SetupSetupRoute
  SetupUrlEntryRoute: typeof SetupUrlEntryRoute
  Visualize2DViewRoute: typeof Visualize2DViewRoute
  VisualizeVisualizeCommandsRoute: typeof VisualizeVisualizeCommandsRoute
  SetupIndexRoute: typeof SetupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DebugRemapWebgpuRoute: DebugRemapWebgpuRoute,
  DebugUndistort2Route: DebugUndistort2Route,
  DebugUnprojectRoute: DebugUnprojectRoute,
  SetupCameraCalibrationRoute: SetupCameraCalibrationRoute,
  SetupEditSettingsRoute: SetupEditSettingsRoute,
  SetupFluidncRoute: SetupFluidncRoute,
  SetupMachineBoundsRoute: SetupMachineBoundsRoute,
  SetupMarkerPositionsRoute: SetupMarkerPositionsRoute,
  SetupNewCamMatrixRoute: SetupNewCamMatrixRoute,
  SetupPointSelectionRoute: SetupPointSelectionRoute,
  SetupSetupRoute: SetupSetupRoute,
  SetupUrlEntryRoute: SetupUrlEntryRoute,
  Visualize2DViewRoute: Visualize2DViewRoute,
  VisualizeVisualizeCommandsRoute: VisualizeVisualizeCommandsRoute,
  SetupIndexRoute: SetupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/debug/remap-webgpu",
        "/debug/undistort2",
        "/debug/unproject",
        "/setup/camera-calibration",
        "/setup/edit-settings",
        "/setup/fluidnc",
        "/setup/machine-bounds",
        "/setup/marker-positions",
        "/setup/new-cam-matrix",
        "/setup/point-selection",
        "/setup/setup",
        "/setup/url-entry",
        "/visualize/2DView",
        "/visualize/VisualizeCommands",
        "/setup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/debug/remap-webgpu": {
      "filePath": "debug/remap-webgpu.tsx"
    },
    "/debug/undistort2": {
      "filePath": "debug/undistort2.tsx"
    },
    "/debug/unproject": {
      "filePath": "debug/unproject.tsx"
    },
    "/setup/camera-calibration": {
      "filePath": "setup/camera-calibration.tsx"
    },
    "/setup/edit-settings": {
      "filePath": "setup/edit-settings.tsx"
    },
    "/setup/fluidnc": {
      "filePath": "setup/fluidnc.tsx"
    },
    "/setup/machine-bounds": {
      "filePath": "setup/machine-bounds.tsx"
    },
    "/setup/marker-positions": {
      "filePath": "setup/marker-positions.tsx"
    },
    "/setup/new-cam-matrix": {
      "filePath": "setup/new-cam-matrix.tsx"
    },
    "/setup/point-selection": {
      "filePath": "setup/point-selection.tsx"
    },
    "/setup/setup": {
      "filePath": "setup/setup.tsx"
    },
    "/setup/url-entry": {
      "filePath": "setup/url-entry.tsx"
    },
    "/visualize/2DView": {
      "filePath": "visualize/2DView.tsx"
    },
    "/visualize/VisualizeCommands": {
      "filePath": "visualize/VisualizeCommands.tsx"
    },
    "/setup/": {
      "filePath": "setup/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
